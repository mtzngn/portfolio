[{"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\index.js":"1","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\App.js":"2","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\RightNav.jsx":"3","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Navbar.jsx":"4","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Burger.jsx":"5","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Logo.jsx":"6","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Cv.jsx":"7","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Contact.jsx":"8","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\About.jsx":"9","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Projects.jsx":"10","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Home.jsx":"11","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\SocialLinks.jsx":"12","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Card.jsx":"13","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Canvas.js":"14","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Circle.js":"15","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Line.js":"16"},{"size":226,"mtime":1615050385739,"results":"17","hashOfConfig":"18"},{"size":956,"mtime":1615741140926,"results":"19","hashOfConfig":"18"},{"size":1540,"mtime":1615200387819,"results":"20","hashOfConfig":"18"},{"size":606,"mtime":1615742693364,"results":"21","hashOfConfig":"18"},{"size":1226,"mtime":1615742693363,"results":"22","hashOfConfig":"18"},{"size":1483,"mtime":1615050385736,"results":"23","hashOfConfig":"18"},{"size":417,"mtime":1615050385741,"results":"24","hashOfConfig":"18"},{"size":2071,"mtime":1615821076295,"results":"25","hashOfConfig":"18"},{"size":3405,"mtime":1615052606700,"results":"26","hashOfConfig":"18"},{"size":5410,"mtime":1615821076296,"results":"27","hashOfConfig":"18"},{"size":6731,"mtime":1615742693368,"results":"28","hashOfConfig":"18"},{"size":1844,"mtime":1615742693365,"results":"29","hashOfConfig":"18"},{"size":714,"mtime":1615742516591,"results":"30","hashOfConfig":"31"},{"size":2900,"mtime":1615821076294,"results":"32","hashOfConfig":"18"},{"size":1635,"mtime":1615742727846,"results":"33","hashOfConfig":"18"},{"size":439,"mtime":1615050385734,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"135l2cz",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o2jshe",{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\index.js",[],["69","70"],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\App.js",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\RightNav.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Navbar.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Burger.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Logo.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Cv.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Contact.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\About.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Projects.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Home.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\SocialLinks.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Card.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Canvas.js",["71","72"],"import React, { useEffect, useRef } from \"react\";\r\nimport Circle from \"./Circle\"\r\nimport Line from \"./Line\"\r\n\r\nexport default function Canvas(){\r\n    const canvasRef = useRef(null);\r\n    let backgroundColor =  \"rgb(20,33,61)\";\r\n    let circleArray = [];\r\n    let lineArray = [];\r\n\r\n\r\n    useEffect(()=>{\r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n        let canvasHeight = canvasRef.current.clientHeight \r\n        let canvasWidth = canvasRef.current.clientWidth\r\n\r\n        document.addEventListener(\"click\", (e)=>{\r\n            circleArray.push(new Circle(e.pageX, e.pageY, (Math.random() - 0.5), (Math.random() - 0.5), (Math.random() + 1.1) * 3, \"white\"))\r\n        })\r\n\r\n        const handleResize = e => {\r\n            ctx.canvas.height = window.innerHeight;\r\n            ctx.canvas.width = window.innerWidth;\r\n          };\r\n      \r\n          handleResize();\r\n          window.addEventListener(\"resize\", handleResize);\r\n\r\n        circleArray = [];\r\n        for(let i = 0; i < canvasWidth * 0.2 ; i++){\r\n            let radius = (Math.random() + 0.2) * 5;\r\n            let x = (Math.random()* (9 - 1) + 1) / 10  * canvasWidth;\r\n            let y = (Math.random()* (9 - 1) + 1) / 10  * canvasHeight;\r\n            let dx = (Math.random() - 0.5) ;  \r\n            let dy = (Math.random() - 0.5) ;\r\n            let color = \"white\"\r\n            circleArray.push(new Circle(x, y, dx, dy, radius, color))\r\n        }\r\n        \r\n        const render = () => {\r\n            if(canvasRef.current == null) {return}\r\n            ctx.fillStyle = backgroundColor;\r\n            ctx.fillRect(0,0, canvasWidth, canvasHeight)\r\n\r\n            circleArray.forEach((circle)=>{\r\n                circle.update(ctx)\r\n            })\r\n\r\n            lineArray = []\r\n            circleArray.forEach((circle, index)=>{\r\n                circleArray.forEach((circle2, index2)=>{\r\n                    if (index !== index2 ) {\r\n                        var dist = Math.hypot(circle.x - circle2.x, circle.y - circle2.y)\r\n                        let a;\r\n                        if (dist < 140) {\r\n                            if (dist < 90) {\r\n                                a = (5 / dist) \r\n                            }else if(90 < dist < 120) { \r\n                               a = 1 / dist\r\n                            }\r\n                            lineArray.push(new Line(circle.x, circle.y, circle2.x, circle2.y, a))\r\n                        } else {}    \r\n                    }\r\n                })\r\n            })\r\n            lineArray.forEach((line)=>{\r\n                line.update(ctx)\r\n            })\r\n            requestAnimationFrame(render);\r\n            \r\n        };\r\n        render();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return <canvas id=\"canvas\" ref={canvasRef} \r\n    \r\n    width= {window.innerWidth} height = {window.innerHeight * 0.92} />\r\n}","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Circle.js",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Line.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":29,"column":23,"nodeType":"79","endLine":29,"endColumn":25},{"ruleId":"77","severity":1,"message":"80","line":49,"column":25,"nodeType":"79","endLine":49,"endColumn":27},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","Assignments to the 'circleArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrayExpression","Assignments to the 'lineArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation"]
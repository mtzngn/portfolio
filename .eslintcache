[{"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\index.js":"1","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\App.js":"2","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\RightNav.jsx":"3","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Navbar.jsx":"4","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Burger.jsx":"5","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Logo.jsx":"6","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Cv.jsx":"7","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Contact.jsx":"8","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\About.jsx":"9","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Projects.jsx":"10","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Home.jsx":"11","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\SocialLinks.jsx":"12","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Card.jsx":"13","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Canvas.js":"14","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Circle.js":"15","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Line.js":"16"},{"size":226,"mtime":1615050385739,"results":"17","hashOfConfig":"18"},{"size":956,"mtime":1615050385732,"results":"19","hashOfConfig":"18"},{"size":1540,"mtime":1615052877692,"results":"20","hashOfConfig":"18"},{"size":607,"mtime":1615119217916,"results":"21","hashOfConfig":"18"},{"size":1240,"mtime":1615052803315,"results":"22","hashOfConfig":"18"},{"size":1483,"mtime":1615050385736,"results":"23","hashOfConfig":"18"},{"size":417,"mtime":1615050385741,"results":"24","hashOfConfig":"18"},{"size":2048,"mtime":1615050385741,"results":"25","hashOfConfig":"18"},{"size":3405,"mtime":1615052606700,"results":"26","hashOfConfig":"18"},{"size":4853,"mtime":1615050385742,"results":"27","hashOfConfig":"18"},{"size":6743,"mtime":1615119763403,"results":"28","hashOfConfig":"18"},{"size":1805,"mtime":1615057069414,"results":"29","hashOfConfig":"18"},{"size":714,"mtime":1615050385735,"results":"30","hashOfConfig":"18"},{"size":2899,"mtime":1615119381723,"results":"31","hashOfConfig":"18"},{"size":1621,"mtime":1615118827281,"results":"32","hashOfConfig":"18"},{"size":439,"mtime":1615050385734,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1o2jshe",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\index.js",[],["72","73"],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\App.js",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\RightNav.jsx",[],["74","75"],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Navbar.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Burger.jsx",["76"],"import React, { useState } from 'react'\r\nimport styled from \"styled-components\";\r\nimport RightNav from './RightNav';\r\n\r\n\r\nconst StyledBurger = styled.div`\r\nwidth: 2rem;\r\nheight: 2rem;\r\nposition: fixed;\r\ntop: 15px;\r\nright: 20px;\r\ndisplay: flex;\r\njustify-content: space-around;\r\nflex-flow: column nowrap;\r\nz-index:99;\r\n\r\n\r\ndiv {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background-color: ${({ open }) => open ? '#fff' : '#e5e5e5'};\r\n    border-radius: 10px;\r\n    transform-origin: 1px;\r\n    transition: all 0.3s linear;\r\n\r\n    &:nth-child(1) {\r\n        transform: ${({ open })=> open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n    &:nth-child(2) {\r\n        transform: ${({ open })=> open ? 'translateX(100%)' : 'translateX(0)'};\r\n        opacity: ${({ open })=> open ? 0 : 1};\r\n    }\r\n    &:nth-child(3) {\r\n        transform: ${({ open })=> open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n}\r\n\r\n`\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n\r\n    return (\r\n        <>\r\n        <StyledBurger open={open} onClick={()=>{setOpen(!open)}}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </StyledBurger>\r\n        <RightNav  open={open} setOpen={setOpen}/>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Burger\r\n","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Logo.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Cv.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Contact.jsx",["77"],"import React from 'react'\r\nimport styled from \"styled-components\"\r\n\r\nconst StyledDIv = styled.div`\r\nbackground-color: #14213D;\r\nheight:100vh;\r\nwidth:100%;\r\ndisplay:flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\n\r\n.wrapper {\r\n    padding: 8px;\r\n    width:80%;\r\n    height:100%;\r\n    display:flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    margin-top: 50%;\r\n    @media (min-width:1024px) {\r\n        margin-top: 30%;\r\n\r\n        }\r\n        @media (min-width:1440px) {\r\n            margin-top: 20%;\r\n\r\n        }\r\n\r\n\r\n    h2{\r\n        margin-bottom:25px;\r\n        font-size: 1.5em;\r\n        @media (min-width:768px) {\r\n            font-size: 2em;\r\n\r\n        }\r\n        @media (min-width:1024px) {\r\n            font-size: 2.4em;\r\n\r\n        }\r\n        @media (min-width:2560px) {\r\n            font-size: 4em;\r\n\r\n        }\r\n    }\r\n    h3 {\r\n        font-size: 1.5em;\r\n        text-align: center;\r\n        @media (min-width:768px) {\r\n            font-size: 2em;\r\n\r\n        }\r\n        @media (min-width:1024px) {\r\n            font-size: 2.4em;\r\n\r\n        }\r\n        @media (min-width:2560px) {\r\n            font-size: 4em;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color:white;\r\n        margin-top:20px;\r\n        font-size:1.5em;\r\n\r\n        @media (min-width:768px) {\r\n            font-size: 2em;\r\n\r\n        }\r\n        @media (min-width:1024px) {\r\n            font-size: 2.4em;\r\n\r\n        }\r\n        @media (min-width:2560px) {\r\n            font-size: 4em;\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n`\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <StyledDIv>\r\n            <div className=\"wrapper\">\r\n            <h2 style={{color: \"white\"}}>CONTACT ME!</h2>\r\n            <h3 style={{color: \"white\"}}>I'm available for freelance work.</h3>\r\n            <h3 style={{color: \"white\"}}>Drop me a line if you fancy a chat.</h3>\r\n                <a href=\"\">mt.zngn@gmail.com</a>\r\n            </div>\r\n        </StyledDIv>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\About.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Projects.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Home.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\SocialLinks.jsx",["78","79"],"import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport BackgroundGit from '../assets/github.png';\r\nimport BackgroundLinked from '../assets/linkedn.png';\r\n\r\nconst StyledSocialLinks = styled.div`\r\na{\r\n    text-decoration:none;\r\n    color: rgb(255, 255, 255);\r\n}\r\nul {\r\n    li {\r\n        list-style: none;\r\n        margin-left:20px;\r\n    }\r\n    display: flex;\r\n}\r\n.circle {\r\n    width:75px;\r\n    height:75px;\r\n    img {\r\n        width:100%;\r\n        box-shadow: 2px 4px 4px black;\r\n        border-radius: 50%;\r\n        transition: 0.3s all linear;\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        display:flex;\r\n        justify-content:center;\r\n        align-items: center;\r\n    }\r\n    img:hover {\r\n        box-shadow: 4px 8px 8px black;\r\n        transform: translateY(-4px);\r\n        color: #fff;\r\n    }\r\n}\r\n\r\n        @media(min-width:765px){\r\n            margin-top: 15px;\r\n        }\r\n        @media(min-width:1024px){\r\n            margin-top: 25px;\r\n        }\r\n        @media(min-width:1440px){\r\n            margin-top: 30px;\r\n        }\r\n`\r\nconst SocialLinks = () => {\r\n    return (\r\n        <StyledSocialLinks>\r\n            <ul>\r\n                <li>\r\n                    <a  target=\"_blank\" href=\"https://www.github.com/mtzngn\" rel=\"noreferrer\"><div className=\" circle circleG\">\r\n                        <img src={BackgroundGit}></img> </div></a>\r\n                </li>\r\n                <li>\r\n                    <a  target=\"_blank\" href=\"https://www.linkedin.com/in/taha-zengin/\" rel=\"noreferrer\"><div className=\"circle circleL\">\r\n                        <img src={BackgroundLinked}></img> </div></a>\r\n                </li>\r\n            </ul>\r\n        </StyledSocialLinks>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Card.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Canvas.js",["80","81","82"],"import React, { useEffect, useRef } from \"react\";\r\nimport Circle from \"./Circle\"\r\nimport Line from \"./Line\"\r\n\r\nexport default function Canvas(){\r\n    const canvasRef = useRef(null);\r\n    let backgroundColor =  \"rgb(20,33,61)\";\r\n    let circleArray = [];\r\n    let lineArray = [];\r\n\r\n\r\n    useEffect(()=>{\r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n        let canvasHeight = canvasRef.current.clientHeight \r\n        let canvasWidth = canvasRef.current.clientWidth\r\n\r\n        document.addEventListener(\"click\", (e)=>{\r\n            circleArray.push(new Circle(e.pageX, e.pageY, (Math.random() - 0.5), (Math.random() - 0.5), (Math.random() + 1.1) * 3, \"white\"))\r\n        })\r\n\r\n        const handleResize = e => {\r\n            ctx.canvas.height = window.innerHeight;\r\n            ctx.canvas.width = window.innerWidth;\r\n          };\r\n      \r\n          handleResize();\r\n          window.addEventListener(\"resize\", handleResize);\r\n\r\n        circleArray = [];\r\n        for(let i = 0; i < canvasWidth * 0.2 ; i++){\r\n            let radius = (Math.random() + 0.2) * 5;\r\n            let x = (Math.random()* (9 - 1) + 1) / 10  * canvasWidth;\r\n            let y = (Math.random()* (9 - 1) + 1) / 10  * canvasHeight;\r\n            let dx = (Math.random() - 0.5) ;  \r\n            let dy = (Math.random() - 0.5) ;\r\n            let color = \"white\"\r\n            circleArray.push(new Circle(x, y, dx, dy, radius, color))\r\n        }\r\n        \r\n        const render = () => {\r\n            if(canvasRef.current == null) {return}\r\n            ctx.fillStyle = backgroundColor;\r\n            ctx.fillRect(0,0, canvasWidth, canvasHeight)\r\n\r\n            circleArray.forEach((circle)=>{\r\n                circle.update(ctx)\r\n            })\r\n\r\n            lineArray = []\r\n            circleArray.forEach((circle, index)=>{\r\n                circleArray.forEach((circle2, index2)=>{\r\n                    if (index != index2 ) {\r\n                        var dist = Math.hypot(circle.x - circle2.x, circle.y - circle2.y)\r\n                        let a;\r\n                        if (dist < 140) {\r\n                            if (dist < 90) {\r\n                                a = (5 / dist) \r\n                            }else if(90 < dist < 120) { \r\n                               a = 1 / dist\r\n                            }\r\n                            lineArray.push(new Line(circle.x, circle.y, circle2.x, circle2.y, a))\r\n                        } else {}    \r\n                    }\r\n                })\r\n            })\r\n            lineArray.forEach((line)=>{\r\n                line.update(ctx)\r\n            })\r\n            requestAnimationFrame(render);\r\n            \r\n        };\r\n        render();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return <canvas id=\"canvas\" ref={canvasRef} \r\n    \r\n    width= {window.innerWidth} height = {window.innerHeight * 0.92} />\r\n}","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Circle.js",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Line.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"87"},{"ruleId":"85","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":98,"column":17,"nodeType":"95","endLine":98,"endColumn":28},{"ruleId":"96","severity":1,"message":"97","line":56,"column":25,"nodeType":"95","endLine":56,"endColumn":50},{"ruleId":"96","severity":1,"message":"97","line":60,"column":25,"nodeType":"95","endLine":60,"endColumn":53},{"ruleId":"98","severity":1,"message":"99","line":29,"column":23,"nodeType":"100","endLine":29,"endColumn":25},{"ruleId":"98","severity":1,"message":"101","line":49,"column":25,"nodeType":"100","endLine":49,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":52,"column":31,"nodeType":"104","messageId":"105","endLine":52,"endColumn":33},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],["106"],["107"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","Assignments to the 'circleArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrayExpression","Assignments to the 'lineArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
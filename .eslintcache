[{"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\index.js":"1","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\App.js":"2","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\RightNav.jsx":"3","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Navbar.jsx":"4","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Burger.jsx":"5","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Logo.jsx":"6","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Cv.jsx":"7","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Contact.jsx":"8","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\About.jsx":"9","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Projects.jsx":"10","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Home.jsx":"11","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\SocialLinks.jsx":"12","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Card.jsx":"13","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Canvas.js":"14","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Circle.js":"15","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Line.js":"16"},{"size":226,"mtime":1613297604379,"results":"17","hashOfConfig":"18"},{"size":956,"mtime":1613516050690,"results":"19","hashOfConfig":"18"},{"size":1365,"mtime":1613431262491,"results":"20","hashOfConfig":"18"},{"size":515,"mtime":1613431292398,"results":"21","hashOfConfig":"18"},{"size":1251,"mtime":1613431251150,"results":"22","hashOfConfig":"18"},{"size":1483,"mtime":1613330742751,"results":"23","hashOfConfig":"18"},{"size":417,"mtime":1613935325008,"results":"24","hashOfConfig":"18"},{"size":2048,"mtime":1613935194295,"results":"25","hashOfConfig":"18"},{"size":3390,"mtime":1613934194103,"results":"26","hashOfConfig":"18"},{"size":4853,"mtime":1613931050914,"results":"27","hashOfConfig":"18"},{"size":1999,"mtime":1613586352997,"results":"28","hashOfConfig":"18"},{"size":1733,"mtime":1613931063583,"results":"29","hashOfConfig":"18"},{"size":714,"mtime":1613428531687,"results":"30","hashOfConfig":"18"},{"size":2802,"mtime":1613931138064,"results":"31","hashOfConfig":"18"},{"size":1611,"mtime":1613516050693,"results":"32","hashOfConfig":"18"},{"size":439,"mtime":1613516050693,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1o2jshe",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\index.js",[],["68","69"],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\App.js",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\RightNav.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Navbar.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Burger.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Nav\\Logo.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Cv.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Contact.jsx",["70"],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\About.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Projects.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\pages\\Home.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\SocialLinks.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Card.jsx",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Canvas.js",["71","72","73"],"import React, { useEffect, useRef } from \"react\";\r\nimport Circle from \"./Circle\"\r\nimport Line from \"./Line\"\r\n\r\nexport default function Canvas(){\r\n    const canvasRef = useRef(null);\r\n    let backgroundColor =  \"rgb(20,33,61)\";\r\n    let circleArray = [];\r\n    let lineArray = [];\r\n\r\n\r\n    useEffect(()=>{\r\n        let canvasHeight = canvasRef.current.clientHeight\r\n        let canvasWidth = canvasRef.current.clientWidth\r\n\r\n            document.addEventListener(\"resize\", function() {\r\n                canvasHeight = canvasRef.current.clientHeight\r\n                canvasWidth = canvasRef.current.clientWidth            \r\n                console.log(canvasHeight)\r\n                console.log(canvasWidth)\r\n            });\r\n        document.addEventListener(\"click\", (e)=>{\r\n            circleArray.push(new Circle(e.pageX, e.pageY, (Math.random() - 0.5), (Math.random() - 0.5), (Math.random() + 1.1) * 3, \"white\"))\r\n        })\r\n\r\n        circleArray = [];\r\n        for(let i = 0; i < canvasWidth * 0.2 ; i++){\r\n            let radius = (Math.random() + 0.2) * 5;\r\n            let x = Math.random() * canvasWidth;\r\n            let y = Math.random() * canvasHeight;\r\n            let dx = (Math.random() - 0.5) ;  \r\n            let dy = (Math.random() - 0.5) ;\r\n            let color = \"white\"\r\n            circleArray.push(new Circle(x, y, dx, dy, radius, color))\r\n        }\r\n        \r\n        const render = () => {\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext(\"2d\");\r\n            ctx.fillStyle = backgroundColor;\r\n            ctx.fillRect(0,0, canvasWidth, canvasHeight)\r\n\r\n            circleArray.forEach((circle)=>{\r\n                circle.update(ctx)\r\n            })\r\n\r\n            lineArray = []\r\n            circleArray.forEach((circle, index)=>{\r\n                circleArray.forEach((circle2, index2)=>{\r\n                    if (index != index2 ) {\r\n                        var dist = Math.hypot(circle.x - circle2.x, circle.y - circle2.y)\r\n                        let a;\r\n                        if (dist < 140) {\r\n                            if (dist < 90) {\r\n                                a = (5 / dist) \r\n                            }else if(90 < dist < 120) { \r\n                               a = 1 / dist\r\n                            }\r\n                            lineArray.push(new Line(circle.x, circle.y, circle2.x, circle2.y, a))\r\n                        } else {}    \r\n                    }\r\n                })\r\n            })\r\n            lineArray.forEach((line)=>{\r\n                line.update(ctx)\r\n            })\r\n            requestAnimationFrame(render);\r\n        };\r\n        render();\r\n    }, []);\r\n\r\n    return <canvas id=\"canvas\" ref={canvasRef} \r\n    \r\n    width= {window.innerWidth} height = {window.innerHeight * 0.92} />\r\n}","C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Circle.js",[],"C:\\Users\\Taha\\Desktop\\Coding\\portfolio\\src\\components\\Canvas\\Line.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":98,"column":17,"nodeType":"80","endLine":98,"endColumn":28},{"ruleId":"81","severity":1,"message":"82","line":26,"column":23,"nodeType":"83","endLine":26,"endColumn":25},{"ruleId":"81","severity":1,"message":"84","line":47,"column":25,"nodeType":"83","endLine":47,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":50,"column":31,"nodeType":"87","messageId":"88","endLine":50,"endColumn":33},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","Assignments to the 'circleArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrayExpression","Assignments to the 'lineArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]